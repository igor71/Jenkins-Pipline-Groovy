node('mongo_bu') {
  stage('Create MongoDB Arcive') {
    catchError {sh '''#!/bin/bash -xe
       cd $WORKSPACE
       mongodump --db yidb --archive --host 192.168.1.114 > $PWD/timestamp.yidb.archive
       mongodump --db maindb --archive --host 192.168.1.114 > $PWD/timestamp.maindb.archive
       du -sh $WORKSPACE
       tar cpzf MongoDB_BU_${BUILD_NUMBER}.tgz $(ls timestamp.yidb.archive timestamp.maindb.archive) --warning=no-file-changed --exclude=./PW.txt || ( export ret=$?; [[ $ret -eq 1 ]] || exit "$ret" )
       file="$WORKSPACE/MongoDB_BU_${BUILD_NUMBER}.tgz"
       if [ -f $file ] ; then
          rm timestamp.yidb.archive timestamp.maindb.archive  
       fi
       ''' }
	step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'igor.rabkin@xiaoyi.com, sagi.golan@xiaoyi.com', sendToIndividuals: true])
  }
  stage('Upload Backup Arcive To Network Share') {
    sh 'pv -f $WORKSPACE/MongoDB_BU_${BUILD_NUMBER}.tgz > /media/common/MONGO_BACKUP/MongoDB_BU_${BUILD_NUMBER}.tgz'
  }
  stage('Keep Backup Files Only For Latest 7 Days') {
    sh 'sshpass -f PW.txt ssh -tt -o StrictHostKeyChecking=no admin@yifileserver "find /share/Common/MONGO_BACKUP -mtime +7 -type f | xargs rm -f"'
  }
  stage('Archive Inegrity Check') {
    catchError {sh '''#!/bin/bash -xe
                   md5sum /media/common/MONGO_BACKUP/MongoDB_BU_${BUILD_NUMBER}.tgz > $WORKSPACE/MongoDB_BU_${BUILD_NUMBER}.tgz.md5
                   md5sum -c MongoDB_BU_${BUILD_NUMBER}.tgz.md5 
                       if [ "$?" != "0" ]; then
                          echo "SHA1 changed! Security breach? Job Will Be Marked As Failed!!!"
                          exit -1
                       fi
        ''' }
    step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'igor.rabkin@xiaoyi.com, sagi.golan@xiaoyi.com', sendToIndividuals: true])
  }
  stage('Remove Original Archive File From $WORKSPACE') {
     try {
      sh 'rm -f $WORKSPACE/MongoDB_BU_*'
        currentBuild.result = 'SUCCESS'
    } catch (any) {
        currentBuild.result = 'FAILURE'
        throw any //rethrow exception to prevent the build from proceeding
    } finally {
        step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'igor.rabkin@xiaoyi.com, sagi.golan@xiaoyi.com', sendToIndividuals: true])
    }
   }
}
