node('windows-adas') {
  stage('Clone ADAS Repo') {
	bat '''
	    echo "CleanUP %WORKSPACE% Directory"
		cd C:\\Jenkins\\workspace\\Windows-Build-Adas
		forfiles /P . /M * /C "cmd /c if @isdir==FALSE del @file"
		forfiles /P . /M * /C "cmd /c if @isdir==TRUE rmdir /S /Q @file"
	        git clone --branch=develop --depth=1 ssh://git@192.168.1.49/media/CODE_CENTRAL/YiProducts.git .
		git clean -fdx
                git submodule update --init --recursive
	   '''
	}
  stage('Running build_adas_demo') {
       catchError {bat '''
             SET PATH="C:\\Program Files (x86)\\CMake\\bin;%PATH%"
             SET BOOST_ROOT=C:\\local\\boost_1_72_0
             SET OPENCV_DIR=C:\\local\\opencv\\build
	     
	     cd %WORKSPACE%\\project\\win
	     REM Retrive Current Directory
             SET "SOURCE=%WORKSPACE%\\project\\win"
             REM Go 2 Levels Up
             FOR %%I IN ("%SOURCE%\\..\\..") DO SET "REPO_ROOT=%%~FI"
             ECHO "WORKING DIRECTORY IS: %REPO_ROOT%"
             SET ADAS_DEMO_VARIANT=mindemo
                 :: How to build:
                 :: (none) - skip
                 :: 1 - build
                 :: 2 - rebuild
             SET ADAS_BUILD_FR=build
             SET BUILD_3RD_PARTY=build
                 if NOT "%1" == "" (
	                if "%1" == "rebuild-infra" (
		             set ADAS_BUILD_FR=rebuild
		             set BUILD_3RD_PARTY=rebuild
	             )
	             if "%1" == "rebuild" (
		             set ADAS_BUILD_FR=%1
	             )
                 )
                 if NOT "%2" == "" ( set BUILD_3RD_PARTY=%2 )
                    call build_3rdParty.bat %ADAS_DEMO_VARIANT% %BUILD_3RD_PARTY% %2
                    
                    ECHO "REPO ROOT IS: %REPO_ROOT%"
                    SET ADAS_FR_NAME=adas
                    SET FR_SUBDIR=%REPO_ROOT%\\tools\\adas_demo
                    :: FR
                    echo "---------------- Building adas ------------------"
                    call %REPO_ROOT%\\yi_infrastructure\\project\\win\\build_lib.bat adas_demo %ADAS_BUILD_FR% %FR_SUBDIR% "-DADAS_DEMO_NAME=%ADAS_FR_NAME%" ""
             ''' }
  step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'igor.rabkin@xiaoyi.com', sendToIndividuals: true])
	}                                  
  stage('Running build_babycam_demo') {
	bat '''
	     set PATH="C:\\Program Files\\CMake\\bin;%PATH%"
             set BOOST_ROOT=C:\\local\\boost_1_70_0
             set OPENCV_DIR=C:\\local\\opencv\\build
	     cd %WORKSPACE%\\project\\win
	     build_babycam_demo.bat
             '''
	}
  stage('Running build_fr_demo') {
	bat '''
	     set PATH="C:\\Program Files (x86)\\CMake\\bin;%PATH%"
             set BOOST_ROOT=C:\\local\\boost_1_70_0
             set OPENCV_DIR=C:\\local\\opencv\\build
	     cd %WORKSPACE%\\project\\win
	     build_fr_demo.bat
            '''
	}
  stage('Running build_fr_test') {
	bat '''
	     set PATH="C:\\Program Files (x86)\\CMake\\bin;%PATH%"
             set BOOST_ROOT=C:\\local\\boost_1_70_0
             set OPENCV_DIR=C:\\local\\opencv\\build
	     cd %WORKSPACE%\\project\\win
	     build_fr_test.bat
            '''
	}
  stage('Running build_fulldemo') {
	bat '''
	     set PATH="C:\\Program Files (x86)\\CMake\\bin;%PATH%"
             set BOOST_ROOT=C:\\local\\boost_1_70_0
             set OPENCV_DIR=C:\\local\\opencv\\build
	     cd %WORKSPACE%\\project\\win
	     build_fulldemo.bat
           '''
	}
  stage('Running build_hm') {
	bat '''
	     set PATH="C:\\Program Files (x86)\\CMake\\bin;%PATH%"
             set BOOST_ROOT=C:\\local\\boost_1_70_0
             set OPENCV_DIR=C:\\local\\opencv\\build
	     cd %WORKSPACE%\\project\\win
	     build_hm.bat
             '''
	}
  stage('Running build_vc_test') {
     try {
         bat '''
	     set PATH="C:\\Program Files (x86)\\CMake\\bin;%PATH%"
             set BOOST_ROOT=C:\\local\\boost_1_70_0
             set OPENCV_DIR=C:\\local\\opencv\\build
	     cd %WORKSPACE%\\project\\win
	     build_vc_test.bat H2
             '''
        currentBuild.result = 'SUCCESS'
    } catch (any) {
        currentBuild.result = 'FAILURE'
        throw any //rethrow exception to prevent the build from proceeding
    } finally {
        step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'igor.rabkin@xiaoyi.com', sendToIndividuals: true])
    }
   }
}
